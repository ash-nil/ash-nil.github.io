knitr::opts_chunk$set(echo = TRUE)
library(ggplot2, quietly = TRUE)
library (lessR, quietly = TRUE)
library (kableExtra, quietly = TRUE)
library (ROI, quietly = TRUE)
library (ROI.plugin.glpk, quietly = TRUE)
library (ompr, quietly = TRUE)
library (ompr.roi, quietly = TRUE)
library(formatR, quietly = TRUE)
library(hms, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(lubridate, quietly = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(lubridate)
# converting to date format
Blink2$Connection <- as.Date(Blink2$Connection, format = "%A, %B %d, %Y")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2, quietly = TRUE)
library (lessR, quietly = TRUE)
library (kableExtra, quietly = TRUE)
library (ROI, quietly = TRUE)
library (ROI.plugin.glpk, quietly = TRUE)
library (ompr, quietly = TRUE)
library (ompr.roi, quietly = TRUE)
library(formatR, quietly = TRUE)
library(hms, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(lubridate, quietly = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(lubridate)
# Read in Blink data
Blink <- Read("data/EV-blink.csv", quiet = TRUE)
# Convert relevant columns to duration measurements
Blink$Total.Time <-  as.duration(hms(Blink$Total.Time))
Blink$Occupancy.Billable.Time <-  as.duration(hms(Blink$Occupancy.Billable.Time))
Blink$Total.Occupancy.Time <-  as.duration(hms(Blink$Total.Occupancy.Time))
Blink$Billable.Time <-  as.duration(hms(Blink$Billable.Time))
Blink$Plug.Duration <-  as.duration(hms(Blink$Plug.Duration))
Blink$Energy.Duration <-  as.duration(hms(Blink$Energy.Duration))
Blink$Total.Time.hrs <- as.numeric(as.difftime(Blink$Total.Time, units = "secs"), units = "hours")
Blink$Energy.Duration.hrs <- as.numeric(as.difftime(Blink$Energy.Duration, units = "secs"), units = "hours")
Boxes <- data.frame(
"Total Time" = Blink$Total.Time.hrs,
"Energy Duration" = Blink$Energy.Duration.hrs)
boxplot(Boxes,
main="Total Energy Duration and Time at Charger",
names = c("Energy Duration", "Total Time"),
xlab="Duration in Hours",
col="grey",
border="black",
horizontal=TRUE
)
# Removing Outliers
quartiles <- quantile(Blink$Total.Time.hrs, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(c(Blink$Total.Time.hrs, Blink$Energy.Duration.hrs))
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
Blink2 <- subset(Blink, Blink$Total.Time.hrs > Lower & Blink$Total.Time.hrs < Upper)
Blink2 <- subset(Blink, Blink$Energy.Duration.hrs > Lower & Blink$Energy.Duration.hrs < Upper)
Blink.Summary <- Blink2 |>
group_by(Location.Name) |>
summarize(
"Count of Charging Instances" = n(),
"Total Time (hrs)" = sum(Total.Time.hrs),
"Total Energy Duration (hrs)" = sum(Energy.Duration.hrs),
"Total Energy Use (kW)" = sum(Cummulative.Energy)
)
kbl (Blink.Summary, booktabs=T, escape=F, digits = 2,
caption =
"Summary of Blink Data by Parking Location") |>
column_spec(column = 2:5, width = "1in")|>
kable_styling(latex_options = "hold_position") |>
kable_styling(latex_options="scale_down")
# Maximum and Minimum values of numerical columns
max_total_time <- max(Blink2$Total.Time.hrs, na.rm = TRUE)
min_total_time <- min(Blink2$Total.Time.hrs, na.rm = TRUE)
max_plug_duration <- max(Blink2$Plug.Duration, na.rm = TRUE)
min_plug_duration <- min(Blink2$Plug.Duration, na.rm = TRUE)
max_energy_duration <- max(Blink2$Energy.Duration.hrs, na.rm = TRUE)
min_energy_duration <- min(Blink2$Energy.Duration.hrs, na.rm = TRUE)
# Print the maximum and minimum values
cat("Maximum Total.Time.hrs:", max_total_time, "\n")
cat("Minimum Total.Time.hrs:", min_total_time, "\n")
cat("Maximum Plug.Duration (seconds...divide by 3600 for hrs):", max_plug_duration, "\n")
cat("Minimum Plug.Duration (seconds...-divide by 3600 for hrs):", min_plug_duration, "\n")
cat("Maximum Energy.Duration.hrs:", max_energy_duration, "\n")
cat("Minimum Energy.Duration.hrs:", min_energy_duration, "\n")
# column to a date format
Blink2$Connection <- as.Date(Blink2$Connection, format = "%A, %B %d, %Y")
# day of the week
Blink2$Day_of_Week <- weekdays(Blink2$Connection)
# count occurrences of each day of the week
day_counts <- table(Blink2$Day_of_Week)
# display
print(day_counts)
# converting to date format
Blink2$Connection <- as.Date(Blink2$Connection, format = "%A, %B %d, %Y")
# extract the day of the week
Blink2$Day_of_Week <- weekdays(Blink2$Connection)
# occurrences of each day of the week
day_counts <- table(Blink2$Day_of_Week)
# converting day_counts to a df
day_counts_df <- as.data.frame(day_counts)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2, quietly = TRUE)
library (lessR, quietly = TRUE)
library (kableExtra, quietly = TRUE)
library (ROI, quietly = TRUE)
library (ROI.plugin.glpk, quietly = TRUE)
library (ompr, quietly = TRUE)
library (ompr.roi, quietly = TRUE)
library(formatR, quietly = TRUE)
library(hms, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(lubridate, quietly = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(lubridate)
# Read in Blink data
Blink <- Read("data/EV-blink.csv", quiet = TRUE)
# Convert relevant columns to duration measurements
Blink$Total.Time <-  as.duration(hms(Blink$Total.Time))
Blink$Occupancy.Billable.Time <-  as.duration(hms(Blink$Occupancy.Billable.Time))
Blink$Total.Occupancy.Time <-  as.duration(hms(Blink$Total.Occupancy.Time))
Blink$Billable.Time <-  as.duration(hms(Blink$Billable.Time))
Blink$Plug.Duration <-  as.duration(hms(Blink$Plug.Duration))
Blink$Energy.Duration <-  as.duration(hms(Blink$Energy.Duration))
Blink$Total.Time.hrs <- as.numeric(as.difftime(Blink$Total.Time, units = "secs"), units = "hours")
Blink$Energy.Duration.hrs <- as.numeric(as.difftime(Blink$Energy.Duration, units = "secs"), units = "hours")
Boxes <- data.frame(
"Total Time" = Blink$Total.Time.hrs,
"Energy Duration" = Blink$Energy.Duration.hrs)
boxplot(Boxes,
main="Total Energy Duration and Time at Charger",
names = c("Energy Duration", "Total Time"),
xlab="Duration in Hours",
col="grey",
border="black",
horizontal=TRUE
)
# Removing Outliers
quartiles <- quantile(Blink$Total.Time.hrs, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(c(Blink$Total.Time.hrs, Blink$Energy.Duration.hrs))
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
Blink2 <- subset(Blink, Blink$Total.Time.hrs > Lower & Blink$Total.Time.hrs < Upper)
Blink2 <- subset(Blink, Blink$Energy.Duration.hrs > Lower & Blink$Energy.Duration.hrs < Upper)
Blink.Summary <- Blink2 |>
group_by(Location.Name) |>
summarize(
"Count of Charging Instances" = n(),
"Total Time (hrs)" = sum(Total.Time.hrs),
"Total Energy Duration (hrs)" = sum(Energy.Duration.hrs),
"Total Energy Use (kW)" = sum(Cummulative.Energy)
)
kbl (Blink.Summary, booktabs=T, escape=F, digits = 2,
caption =
"Summary of Blink Data by Parking Location") |>
column_spec(column = 2:5, width = "1in")|>
kable_styling(latex_options = "hold_position") |>
kable_styling(latex_options="scale_down")
# Maximum and Minimum values of numerical columns
max_total_time <- max(Blink2$Total.Time.hrs, na.rm = TRUE)
min_total_time <- min(Blink2$Total.Time.hrs, na.rm = TRUE)
max_plug_duration <- max(Blink2$Plug.Duration, na.rm = TRUE)
min_plug_duration <- min(Blink2$Plug.Duration, na.rm = TRUE)
max_energy_duration <- max(Blink2$Energy.Duration.hrs, na.rm = TRUE)
min_energy_duration <- min(Blink2$Energy.Duration.hrs, na.rm = TRUE)
# Print the maximum and minimum values
cat("Maximum Total.Time.hrs:", max_total_time, "\n")
cat("Minimum Total.Time.hrs:", min_total_time, "\n")
cat("Maximum Plug.Duration (seconds...divide by 3600 for hrs):", max_plug_duration, "\n")
cat("Minimum Plug.Duration (seconds...-divide by 3600 for hrs):", min_plug_duration, "\n")
cat("Maximum Energy.Duration.hrs:", max_energy_duration, "\n")
cat("Minimum Energy.Duration.hrs:", min_energy_duration, "\n")
# column to a date format
Blink2$Connection <- as.Date(Blink2$Connection, format = "%A, %B %d, %Y")
# day of the week
Blink2$Day_of_Week <- weekdays(Blink2$Connection)
# count occurrences of each day of the week
day_counts <- table(Blink2$Day_of_Week)
# display
print(day_counts)
# converting to date format
Blink2$Connection <- as.Date(Blink2$Connection, format = "%A, %B %d, %Y")
# extract the day of the week
Blink2$Day_of_Week <- weekdays(Blink2$Connection)
# occurrences of each day of the week
day_counts <- table(Blink2$Day_of_Week)
# converting day_counts to a df
day_counts_df <- as.data.frame(day_counts)
day_counts_df
