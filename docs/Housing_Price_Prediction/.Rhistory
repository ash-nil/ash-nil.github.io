knitr::opts_chunk$set(echo = TRUE)
library(ggplot2, quietly = TRUE)
library (lessR, quietly = TRUE)
library (kableExtra, quietly = TRUE)
library (ROI, quietly = TRUE)
library (ROI.plugin.glpk, quietly = TRUE)
library (ompr, quietly = TRUE)
library (ompr.roi, quietly = TRUE)
library(formatR, quietly = TRUE)
library(hms, quietly = TRUE)
library(dplyr, quietly = TRUE)
library(lubridate, quietly = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(lubridate)
# Read in Blink data
Blink <- Read("data/EV-blink.csv", quiet = TRUE)
# Convert relevant columns to duration measurements
Blink$Total.Time <-  as.duration(hms(Blink$Total.Time))
Blink$Occupancy.Billable.Time <-  as.duration(hms(Blink$Occupancy.Billable.Time))
Blink$Total.Occupancy.Time <-  as.duration(hms(Blink$Total.Occupancy.Time))
Blink$Billable.Time <-  as.duration(hms(Blink$Billable.Time))
Blink$Plug.Duration <-  as.duration(hms(Blink$Plug.Duration))
Blink$Energy.Duration <-  as.duration(hms(Blink$Energy.Duration))
Blink$Total.Time.hrs <- as.numeric(as.difftime(Blink$Total.Time, units = "secs"), units = "hours")
Blink$Energy.Duration.hrs <- as.numeric(as.difftime(Blink$Energy.Duration, units = "secs"), units = "hours")
Boxes <- data.frame(
"Total Time" = Blink$Total.Time.hrs,
"Energy Duration" = Blink$Energy.Duration.hrs)
boxplot(Boxes,
main="Total Energy Duration and Time at Charger",
names = c("Energy Duration", "Total Time"),
xlab="Duration in Hours",
col="grey",
border="black",
horizontal=TRUE
)
# Removing Outliers
quartiles <- quantile(Blink$Total.Time.hrs, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(c(Blink$Total.Time.hrs, Blink$Energy.Duration.hrs))
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR
Blink2 <- subset(Blink, Blink$Total.Time.hrs > Lower & Blink$Total.Time.hrs < Upper)
Blink2 <- subset(Blink, Blink$Energy.Duration.hrs > Lower & Blink$Energy.Duration.hrs < Upper)
Blink.Summary <- Blink2 |>
group_by(Location.Name) |>
summarize(
"Count of Charging Instances" = n(),
"Total Time (hrs)" = sum(Total.Time.hrs),
"Total Energy Duration (hrs)" = sum(Energy.Duration.hrs),
"Total Energy Use (kW)" = sum(Cummulative.Energy)
)
kbl (Blink.Summary, booktabs=T, escape=F, digits = 2,
caption =
"Summary of Blink Data by Parking Location") |>
column_spec(column = 2:5, width = "1in")|>
kable_styling(latex_options = "hold_position") |>
kable_styling(latex_options="scale_down")
# Maximum and Minimum values of numerical columns
max_total_time <- max(Blink2$Total.Time.hrs, na.rm = TRUE)
min_total_time <- min(Blink2$Total.Time.hrs, na.rm = TRUE)
max_plug_duration <- max(Blink2$Plug.Duration, na.rm = TRUE)
min_plug_duration <- min(Blink2$Plug.Duration, na.rm = TRUE)
max_energy_duration <- max(Blink2$Energy.Duration.hrs, na.rm = TRUE)
min_energy_duration <- min(Blink2$Energy.Duration.hrs, na.rm = TRUE)
# Print the maximum and minimum values
cat("Maximum Total.Time.hrs:", max_total_time, "\n")
cat("Minimum Total.Time.hrs:", min_total_time, "\n")
cat("Maximum Plug.Duration (seconds...divide by 3600 for hrs):", max_plug_duration, "\n")
cat("Minimum Plug.Duration (seconds...-divide by 3600 for hrs):", min_plug_duration, "\n")
cat("Maximum Energy.Duration.hrs:", max_energy_duration, "\n")
cat("Minimum Energy.Duration.hrs:", min_energy_duration, "\n")
# column to a date format
Blink2$Connection <- as.Date(Blink2$Connection, format = "%A, %B %d, %Y")
# day of the week
Blink2$Day_of_Week <- weekdays(Blink2$Connection)
# count occurrences of each day of the week
day_counts <- table(Blink2$Day_of_Week)
# display
print(day_counts)
# correct format
Blink2$Connection <- as.Date(Blink2$Connection, format = "%A, %B %d, %Y")
# group data by date and count occurrences per date
date_occurrences <- Blink2 %>%
group_by(Connection) %>%
summarise(occurrences = n())
# display
print(date_occurrences)
# maximum, median, and minimum occurrences
occurrences_stats <- date_occurrences %>%
summarise(
max_occurrences = max(occurrences),
median_occurrences = median(occurrences),
min_occurrences = min(occurrences)
)
# statistics
print(occurrences_stats)
lot <- 1300 #total spaces in parking structure 3
D <- 12  #total chargers to install
BS <- 2 #starting inventory of chargers
LI <- 3 #max chargers to install each week
LS <- 5 #max inventory capacity for chargers
CI <- 2000 #per charger install labor cost
CP <- 300 #per charger purchase cost
WA <- 5 #average area used during install (parking spaces)
BI <- 5000 #base cost of install
#percent of lot available for construction, capped at 50%
LA <- c(lot*.5, #pre-term
lot*0, lot*.0, lot*.19, lot*.29, lot*.40, #weeks 1-5 of term
lot*.37, lot*.35, lot*.39, lot*.31, lot*.32, #weeks 6-10 of term
lot*.0) #finals week
weeks <- length(LA) #completion time (weeks)
model <- MIPModel() |>
add_variable(Vx[t], t=1:weeks, type="integer", lb = 0, ub = LI)   |> #var: install/week
add_variable(Vy[t], t=1:weeks, type="integer", lb = 0)            |> #var: purchases/week
add_variable(Vz[t], t=1:weeks, type="integer", lb = 0, ub = LS)   |> #var: chargers stored/week
add_variable(VCTi[t], t=1:weeks, type="continuous", lb = 0)       |> #var: total install/week
add_variable(VCTp[t], t=1:weeks, type="continuous", lb = 0)       |> #var: total purchase/week
add_variable(VWp[t], t=1:weeks, type="binary")                    |> #var: bulk discount activator
add_variable(VWi[t], t=1:weeks, type="binary")                    |> #var: base install binary
set_objective(sum_expr(VCTi[t]+VCTp[t], t=1:weeks), "min")        |> #obj: min costs
add_constraint(sum_expr(Vx[t], t=1:weeks)==D)                     |> #con: install total demand
add_constraint(Vz[t-1]+Vy[t]-Vx[t] == Vz[t], t = 2:weeks)         |> #con: weeks 2+ stored chargers
add_constraint(BS+Vy[t]-Vx[t] == Vz[t], t = 1)                    |> #con: week 1 stored chargers
add_constraint(Vx[t] <= Vz[t-1], t = 2:weeks)                     |> #con: weeks 2+ install limit
add_constraint(Vx[t] <= BS, t = 1)                                |> #con: week 1 install limit
add_constraint(Vx[t]*WA <= LA[t], t = 1:weeks)                    |> #con: construction area limit
add_constraint(Vx[t]-D*VWi[t] <= 0, t = 1:weeks)                  |> #con: base charge if installing
add_constraint(Vx[t]*CI+VWi[t]*BI == VCTi[t], t = 1:weeks)        |> #con: installation cost/week
add_constraint(Vy[t]-5*VWp[t]>=0, t = 1:weeks)                    |> #con: bulk discount
add_constraint(Vy[t]*CP - CP*VWp[t] == VCTp[t], t = 1:weeks)         #con: purchase cost/week
model_res <- solve_model(model, with_ROI(solver = "glpk"))
model_costs <-
rbind(t(as.matrix(model_res$solution[37:48])),
t(as.matrix(model_res$solution[49:60])))
model_costs <-
rbind(model_costs,
apply(model_costs, 2, sum))
model_summary <-
rbind(t(as.matrix(model_res$solution[1:12])),
t(as.matrix(model_res$solution[13:24])),
t(as.matrix(model_res$solution[25:36])),
round(model_costs, 2))
model_summary <-
cbind(model_summary, apply(model_summary, 1, sum))
model_summary[3,13] <- "-"
colnames(model_summary)<-
c("No Classes", "Week 1", "Week 2", "Week 3", "Week 4", "Mid Terms",
"Week 6", "Week 7", "Week 8", "Week 9", "Week 10", "Finals", "TOTAL")
rownames(model_summary)<-
c("Install Count", "Purchased Chargers", "Stored Chargers",
"Labor Costs", "Purchase Costs", "TOTAL Costs")
kbl (model_summary, booktabs=T, escape=F, align="c",
caption = "One Term Charger Install Plan, Parking Structure 3") |>
kable_styling(latex_options = c("hold_position","scale_down", "striped"))
lot <- 430 #total spaces in parking structure 3
D <- 12  #total chargers to install
BS <- 2 #starting inventory of chargers
LI <- 3 #max chargers to install each week
LS <- 5 #max inventory capacity for chargers
CI <- 2000 #per charger install labor cost
CP <- 300 #per charger purchase cost
WA <- 5 #average area used during install (parking spaces)
BI <- 5000 #base cost of install
#percent of lot available for construction, capped at 50%
LA <- c(lot*.05, #pre-term
lot*.02, lot*.02, lot*.02, lot*.02, lot*.02, #weeks 1-5 of term
lot*.02, lot*.02, lot*.02, lot*.02, lot*.02, #weeks 6-10 of term
lot*.02) #finals week
weeks <- length(LA) #completion time (weeks)
model2 <- MIPModel() |>
add_variable(Vx[t], t=1:weeks, type="integer", lb = 0, ub = LI)   |> #var: install/week
add_variable(Vy[t], t=1:weeks, type="integer", lb = 0)            |> #var: purchases/week
add_variable(Vz[t], t=1:weeks, type="integer", lb = 0, ub = LS)   |> #var: chargers stored/week
add_variable(VCTi[t], t=1:weeks, type="continuous", lb = 0)       |> #var: total install/week
add_variable(VCTp[t], t=1:weeks, type="continuous", lb = 0)       |> #var: total purchase/week
add_variable(VWp[t], t=1:weeks, type="binary")                    |> #var: bulk discount activator
add_variable(VWi[t], t=1:weeks, type="binary")                    |> #var: base install binary
set_objective(sum_expr(VCTi[t]+VCTp[t], t=1:weeks), "min")        |> #obj: min costs
add_constraint(sum_expr(Vx[t], t=1:weeks)==D)                     |> #con: install total demand
add_constraint(Vz[t-1]+Vy[t]-Vx[t] == Vz[t], t = 2:weeks)         |> #con: weeks 2+ stored chargers
add_constraint(BS+Vy[t]-Vx[t] == Vz[t], t = 1)                    |> #con: week 1 stored chargers
add_constraint(Vx[t] <= Vz[t-1], t = 2:weeks)                     |> #con: weeks 2+ install limit
add_constraint(Vx[t] <= BS, t = 1)                                |> #con: week 1 install limit
add_constraint(Vx[t]*WA <= LA[t], t = 1:weeks)                    |> #con: construction area limit
add_constraint(Vx[t]-D*VWi[t] <= 0, t = 1:weeks)                  |> #con: base charge if installing
add_constraint(Vx[t]*CI+VWi[t]*BI == VCTi[t], t = 1:weeks)        |> #con: installation cost/week
add_constraint(Vy[t]-5*VWp[t]>=0, t = 1:weeks)                    |> #con: bulk discount
add_constraint(Vy[t]*CP - CP*VWp[t] == VCTp[t], t = 1:weeks)         #con: purchase cost/week
model2_res <- solve_model(model2, with_ROI(solver = "glpk"))
model2_costs <-
rbind(t(as.matrix(model2_res$solution[37:48])),
t(as.matrix(model2_res$solution[49:60])))
model2_costs <-
rbind(model2_costs,
apply(model2_costs, 2, sum))
model2_summary <-
rbind(t(as.matrix(model2_res$solution[1:12])),
t(as.matrix(model2_res$solution[13:24])),
t(as.matrix(model2_res$solution[25:36])),
round(model2_costs, 2))
model2_summary <-
cbind(model2_summary, apply(model2_summary, 1, sum))
model2_summary[3,13] <- "-"
colnames(model2_summary)<-
c("No Classes", "Week 1", "Week 2", "Week 3", "Week 4", "Mid Terms",
"Week 6", "Week 7", "Week 8", "Week 9", "Week 10", "Finals", "TOTAL")
rownames(model2_summary)<-
c("Install Count", "Purchased Chargers", "Stored Chargers",
"Labor Costs", "Purchase Costs", "TOTAL Costs")
kbl (model2_summary, booktabs=T, escape=F, align="c",
caption = "One Term Charger Install Plan, FAB Parking") |>
kable_styling(latex_options = c("hold_position","scale_down", "striped"))
